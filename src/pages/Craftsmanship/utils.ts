import { armorType, itemsEquipedProps, weaponType } from './types';

export const itemsMock = [
  {
    id: 1,
    nombre: 'Cuchillo de cazador I',
    rama: 'hierro',
    rama_evo: 1,
    ruta: 'weapon/sas/cuchilloCazador',
    rareza: 1,
    evolucion: 'inicial',
    tipo: 'Espada y escudo',
    tipo_arma: 'espadaEscudo',
    precio: 200,
    ataque: 112,
    danio_elemento01: 0,
    elemento_01: '',
    elemento01: '',
    danio_elemento02: 0,
    elemento_02: '',
    elemento02: '',
    afilado: '',
    afinidad: 0,
    defensa: 0,
    sello_ancianos: '',
    ranura01: '',
    ranura02: '',
    ranura03: '',
    tipo_vial: '',
    danio_vial: 0,
    elemento_vial: '',
    numero_disparos: 0,
    tipo_disparo: '',
    nota01: '',
    nota02: '',
    nota03: '',
    modificaciones: 0,
    desvio: '',
    tiro_especial: '',
    bonus_kinsecto: '',
    vial01: '',
    vial02: '',
    vial03: '',
    vial04: '',
    vial05: '',
  },
  {
    id: 2,
    nombre: 'Cuchillo de cazador II',
    rama: 'hierro',
    rama_evo: 2,
    ruta: 'weapon/sas/cuchilloCazador',
    rareza: 1,
    evolucion: 'inicial',
    tipo: 'Espada y escudo',
    tipo_arma: 'espadaEscudo',
    precio: 200,
    ataque: 126,
    danio_elemento01: 0,
    elemento_01: '',
    elemento01: '',
    danio_elemento02: 0,
    elemento_02: '',
    elemento02: '',
    afilado: '',
    afinidad: 0,
    defensa: 0,
    sello_ancianos: '',
    ranura01: '',
    ranura02: '',
    ranura03: '',
    tipo_vial: '',
    danio_vial: 0,
    elemento_vial: '',
    numero_disparos: 0,
    tipo_disparo: '',
    nota01: '',
    nota02: '',
    nota03: '',
    modificaciones: 0,
    desvio: '',
    tiro_especial: '',
    bonus_kinsecto: '',
    vial01: '',
    vial02: '',
    vial03: '',
    vial04: '',
    vial05: '',
  },
  {
    id: 3,
    nombre: 'Cuchillo de cazador III',
    rama: 'hierro',
    rama_evo: 3,
    ruta: 'weapon/sas/cuchilloCazador',
    rareza: 2,
    evolucion: 'inicial',
    tipo: 'Espada y escudo',
    tipo_arma: 'espadaEscudo',
    precio: 1000,
    ataque: 140,
    danio_elemento01: 0,
    elemento_01: '',
    elemento01: '',
    danio_elemento02: 0,
    elemento_02: '',
    elemento02: '',
    afilado: '',
    afinidad: 0,
    defensa: 0,
    sello_ancianos: '',
    ranura01: '',
    ranura02: '',
    ranura03: '',
    tipo_vial: '',
    danio_vial: 0,
    elemento_vial: '',
    numero_disparos: 0,
    tipo_disparo: '',
    nota01: '',
    nota02: '',
    nota03: '',
    modificaciones: 0,
    desvio: '',
    tiro_especial: '',
    bonus_kinsecto: '',
    vial01: '',
    vial02: '',
    vial03: '',
    vial04: '',
    vial05: '',
  },
  {
    id: 3000,
    nombre: 'Lentes de cuero',
    ruta: 'armor/lentesCuero',
    tipo: 'casco',
    rama: 'Cuero',
    rango: 'bajo',
    nivel: 1,
    rareza: 1,
    defensa: 2,
    ranura01: '',
    ranura02: '',
    ranura03: '',
    fuego: 2,
    agua: 0,
    rayo: 0,
    hielo: 0,
    draco: 0,
    precio: 100,
    habilidad1: 'hola',
    habilidad2: 'hola',
  },
  {
    id: 3001,
    nombre: 'Cota de cuero',
    ruta: 'armor/cotaCuero',
    tipo: 'pechera',
    rama: 'Cuero',
    rango: 'bajo',
    nivel: 1,
    rareza: 1,
    defensa: 2,
    ranura01: '',
    ranura02: '',
    ranura03: '',
    fuego: 2,
    agua: 0,
    rayo: 0,
    hielo: 0,
    draco: 0,
    precio: 100,
    habilidad1: 'adios',
    habilidad2: '',
  },
  {
    id: 3002,
    nombre: 'Guantes de cuero',
    ruta: 'armor/guantesCuero',
    tipo: 'guantes',
    rama: 'Cuero',
    rango: 'bajo',
    nivel: 1,
    rareza: 1,
    defensa: 2,
    ranura01: '',
    ranura02: '',
    ranura03: '',
    fuego: 2,
    agua: 0,
    rayo: 0,
    hielo: 0,
    draco: 0,
    precio: 100,
    habilidad1: 'adios',
    habilidad2: '',
  },
  {
    id: 3003,
    nombre: 'CinturÃ³n de cuero',
    ruta: 'armor/cinturonCuero',
    tipo: 'pantalon',
    rama: 'Cuero',
    rango: 'bajo',
    nivel: 1,
    rareza: 1,
    defensa: 2,
    ranura01: '',
    ranura02: '',
    ranura03: '',
    fuego: 2,
    agua: 0,
    rayo: 0,
    hielo: 0,
    draco: 0,
    precio: 100,
    habilidad1: 'adios',
    habilidad2: '',
  },
  {
    id: 3004,
    nombre: 'Pantalones de cuero',
    ruta: 'armor/pantalonesCuero',
    tipo: 'botas',
    rama: 'Cuero',
    rango: 'bajo',
    nivel: 1,
    rareza: 1,
    defensa: 2,
    ranura01: '',
    ranura02: '',
    ranura03: '',
    fuego: 2,
    agua: 0,
    rayo: 0,
    hielo: 0,
    draco: 0,
    precio: 100,
    habilidad1: 'adios',
    habilidad2: '',
  },
  {
    id: 3005,
    nombre: 'Cubrecabeza de malla',
    ruta: 'armor/cubrecabezaMalla',
    tipo: 'casco',
    rama: 'Malla',
    rango: 'bajo',
    nivel: 1,
    rareza: 1,
    defensa: 2,
    ranura01: '',
    ranura02: '',
    ranura03: '',
    fuego: 0,
    agua: 2,
    rayo: 0,
    hielo: 0,
    draco: 0,
    precio: 100,
    habilidad1: 'adios',
    habilidad2: '',
  },
];
export const itemsEquippedDefault = {
  arma: {
      id: 5000,
      nombre: '',
      rama: '',
      rama_evo: 3,
      ruta: '',
      rareza: 2,
      evolucion: '',
      tipo: 'Espada y escudo',
      tipo_arma: 'espadaEscudo',
      precio: 0,
      ataque: 0,
      danio_elemento01: 0,
      elemento_01: '',
      elemento01: '',
      danio_elemento02: 0,
      elemento_02: '',
      elemento02: '',
      afilado: '',
      afinidad: 0,
      defensa: 0,
      sello_ancianos: '',
      ranura01: '',
      ranura02: '',
      ranura03: '',
      tipo_vial: '',
      danio_vial: 0,
      elemento_vial: '',
      numero_disparos: 0,
      tipo_disparo: '',
      nota01: '',
      nota02: '',
      nota03: '',
      modificaciones: 0,
      desvio: '',
      tiro_especial: '',
      bonus_kinsecto: '',
      vial01: '',
      vial02: '',
      vial03: '',
      vial04: '',
      vial05: '',
  },
  casco: {
      id: 5001,
      nombre: '',
      ruta: '',
      tipo: '',
      rama: '',
      rango: '',
      nivel: 1,
      rareza: 1,
      defensa: 2,
      ranura01: '',
      ranura02: '',
      ranura03: '',
      fuego: 0,
      agua: 2,
      rayo: 0,
      hielo: 0,
      draco: 0,
      precio: 100,
      habilidad1: '',
      habilidad2: '',
  },
  pechera: {
      id: 5002,
      nombre: '',
      ruta: '',
      tipo: '',
      rama: '',
      rango: '',
      nivel: 1,
      rareza: 1,
      defensa: 2,
      ranura01: '',
      ranura02: '',
      ranura03: '',
      fuego: 0,
      agua: 2,
      rayo: 0,
      hielo: 0,
      draco: 0,
      precio: 100,
      habilidad1: '',
      habilidad2: '',
  },
  guanteletes: {
      id: 5003,
      nombre: '',
      ruta: '',
      tipo: '',
      rama: '',
      rango: '',
      nivel: 1,
      rareza: 1,
      defensa: 2,
      ranura01: '',
      ranura02: '',
      ranura03: '',
      fuego: 0,
      agua: 2,
      rayo: 0,
      hielo: 0,
      draco: 0,
      precio: 100,
      habilidad1: '',
      habilidad2: '',
  },
  cintura: {
      id: 5004,
      nombre: '',
      ruta: '',
      tipo: '',
      rama: '',
      rango: '',
      nivel: 1,
      rareza: 1,
      defensa: 2,
      ranura01: '',
      ranura02: '',
      ranura03: '',
      fuego: 0,
      agua: 2,
      rayo: 0,
      hielo: 0,
      draco: 0,
      precio: 100,
      habilidad1: '',
      habilidad2: '',
  },
  grebas: {
      id: 5005,
      nombre: '',
      ruta: '',
      tipo: '',
      rama: '',
      rango: '',
      nivel: 1,
      rareza: 1,
      defensa: 2,
      ranura01: '',
      ranura02: '',
      ranura03: '',
      fuego: 0,
      agua: 2,
      rayo: 0,
      hielo: 0,
      draco: 0,
      precio: 100,
      habilidad1: '',
      habilidad2: '',
  },
};
export const equipmentStatsDefault = {
  ataque: 0,
  defensa: 0,
  fuego: 0,
  agua: 0,
  rayo: 0,
  hielo: 0,
  draco: 0,
};
export const filterByItemName = (name: string) => (item: any) => {
  return item.nombre
    .toLowerCase()
    .trim()
    .includes(name.toLowerCase().trim());
};

export function checkIfAItemIsEquipped(equipment: any) {
  let check = false;
  for (const itemsEquippedKey in equipment) {
    if (equipment.hasOwnProperty(itemsEquippedKey)) {
      // @ts-ignore
      const itemEquipped = equipment[itemsEquippedKey];
      if (itemEquipped.nombre !== '') {
        check = true;
      }
    }
  }
  return check;
}

export function calculateEquipmentStats(itemsEquipped: itemsEquipedProps) {
  let defenseSum = 0;
  let fireSum = 0;
  let waterSum = 0;
  let thunderSum = 0;
  let iceSum = 0;
  let dracoSum = 0;
  let attackSum = 0;
  for (const key in itemsEquipped) {
    if (itemsEquipped.hasOwnProperty(key)) {
      // FIXME: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'itemsEquipedProps'.

      // @ts-ignore
      const itemEquipped = itemsEquipped[key];
      if (itemEquipped.nombre !== '') {
        if (itemEquipped.tipo !== 'arma') {
          defenseSum += itemEquipped.defensa;
          fireSum += itemEquipped.fuego;
          waterSum += itemEquipped.agua;
          thunderSum += itemEquipped.rayo;
          iceSum += itemEquipped.hielo;
          dracoSum += itemEquipped.draco;
        } else {
          defenseSum += itemEquipped.defensa;
          attackSum += itemEquipped.ataque;
        }
      }
    }
  }
  return {
    ataque: attackSum,
    agua: waterSum,
    draco: dracoSum,
    fuego: fireSum,
    hielo: iceSum,
    rayo: thunderSum,
    defensa: defenseSum,
  };
}

export function removeItem(
  items: (armorType | weaponType)[],
  itemToRemove: armorType | weaponType,
) {
  return items.filter((x) => x.nombre !== itemToRemove.nombre);
}

export const filterByItemTypes = (typesPressed: string[]) => (items: any) => {
  for (const type of typesPressed) {
    if (items.tipo.toLowerCase() === type.toLowerCase()) {
      return items;
    }
  }
};
